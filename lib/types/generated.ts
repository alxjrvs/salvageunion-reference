/**
 * Auto-generated TypeScript types from JSON Schema
 * DO NOT EDIT MANUALLY
 * Generated by tools/generateSchemaTypes.ts
 */

// ============================================
// Common Type Definitions
// ============================================

/**
 * Cost in ability points to activate an ability
 */
export type SURefActivationCost = number | 'X'
/**
 * Ability tree name
 */
export type SURefTree =
  | 'Advanced Engineer'
  | 'Advanced Hacking'
  | 'Advanced Hauler'
  | 'Advanced Scout'
  | 'Advanced Soldier'
  | 'Augmentation'
  | 'Cyborg'
  | 'Electronics'
  | 'Fabricator'
  | 'Forging'
  | 'Generic'
  | 'Gladitorial Combat'
  | 'Hacking'
  | 'Leadership'
  | 'Legendary Cyborg'
  | 'Legendary Engineer'
  | 'Legendary Fabricator'
  | 'Legendary Hacker'
  | 'Legendary Hauler'
  | 'Legendary Ranger'
  | 'Legendary Scout'
  | 'Legendary Smuggler'
  | 'Legendary Soldier'
  | 'Legendary Union Rep'
  | 'Mech-Tech'
  | 'Mechanical Knowledge'
  | 'Ranger'
  | 'Recon'
  | 'Salvaging'
  | 'Sleuth'
  | 'Smuggler'
  | 'Sniper'
  | 'Survivalist'
  | 'Tactical Warfare'
  | 'Trading'
  | 'Union Rep'

// ============================================
// Enum Type Definitions
// ============================================

/**
 * The source book or expansion for this content
 */
export type SURefSource = 'Salvage Union Workshop Manual'
/**
 * Range bands for abilities and weapons
 */
export type SURefRange = 'Close' | 'Medium' | 'Long' | 'Far' | 'Close/Long'
/**
 * Type of action required to use an ability
 */
export type SURefActionType =
  | 'Passive'
  | 'Free'
  | 'Reaction'
  | 'Turn'
  | 'Short'
  | 'Long'
  | 'DownTime'

// ============================================
// Meta Object Type Definitions
// ============================================

/**
 * SURefMetaDamage dealt by an attack or ability
 */
export interface SURefMetaDamage {
  /**
   * Type of damage (Hit Points or Structure Points)
   */
  type: 'HP' | 'SP'
  amount: number | string
}
/**
 * Special traits and properties of items, systems, or abilities
 */
export type SURefMetaTraits = {
  /**
   * Numeric value for the trait
   */
  amount?: number
  /**
   * Type of trait that doesn't require a numeric value
   */
  type: string
}[]
/**
 * Statistics for mechs, chassis, and vehicles
 */
export interface SURefMetaStats {
  /**
   * Structure points (durability)
   */
  structurePts?: number
  /**
   * Energy points (power capacity)
   */
  energyPts?: number
  /**
   * Heat capacity
   */
  heatCap?: number
  /**
   * Number of system slots
   */
  systemSlots?: number
  /**
   * Number of module slots
   */
  moduleSlots?: number
  /**
   * Cargo capacity
   */
  cargoCap?: number
  /**
   * Technology level
   */
  techLevel?: number
  /**
   * Salvage value in scrap
   */
  salvageValue?: number
  /**
   * Additional notes
   */
  notes?: string
}
/**
 * NPC associated with an entity
 */
export interface SURefMetaNpc {
  /**
   * Name of the NPC
   */
  position: string
  /**
   * Description of the NPC
   */
  description: string
  /**
   * Hit points for creatures and personnel
   */
  hitPoints?: number
  choices?: SURefMetaChoices
}
export interface SURefMetaChoice {
  /**
   * Unique identifier for the entry
   */
  id: string
  /**
   * Name of the choice
   */
  name: string
  /**
   * Description of the choice
   */
  description?: string
  /**
   * Schema for the choice
   */
  schema?: string[]
}
/**
 * SURefMetaChoices available to the player when interacting with the NPC
 */
export type SURefMetaChoices = SURefMetaChoice[]
/**
 * An action, ability, or attack that can be performed
 */
export interface SURefMetaAction {
  /**
   * Name of the action
   */
  name: string
  /**
   * The source book or expansion for this content
   */
  source?: 'Salvage Union Workshop Manual'
  /**
   * Description of what the action does
   */
  description?: string
  /**
   * Mechanical effect of the action
   */
  effect?: string
  /**
   * Cost in ability points to activate an ability
   */
  activationCost?: number | 'X'
  /**
   * Range bands for abilities and weapons
   */
  range?: 'Close' | 'Medium' | 'Long' | 'Far' | 'Close/Long'
  /**
   * Type of action required to use an ability
   */
  actionType?:
    | 'Passive'
    | 'Free'
    | 'Reaction'
    | 'Turn'
    | 'Short'
    | 'Long'
    | 'DownTime'
  traits?: SURefMetaTraits
  damage?: SURefMetaDamage
  stats?: SURefMetaStats
  /**
   * List of options or choices for this action
   */
  options?: (
    | string
    | {
        /**
         * Display label for the option
         */
        label: string
        /**
         * Value or effect of the option
         */
        value: string
      }
  )[]
  choices?: SURefMetaChoices
  table?: SURefMetaTable
  /**
   * Page number in the source book
   */
  page?: number
}
/**
 * A system or module that can be installed on a mech
 */
export interface SURefMetaSystem {
  /**
   * Unique identifier for the entry
   */
  id: string
  /**
   * Name of the system or module
   */
  name: string
  /**
   * The source book or expansion for this content
   */
  source: 'Salvage Union Workshop Manual'
  /**
   * Technology level required
   */
  techLevel: number
  /**
   * Number of slots required to install
   */
  slotsRequired: number
  /**
   * Salvage value in scrap
   */
  salvageValue: number
  /**
   * Whether this is a recommended starting system
   */
  recommended?: boolean
  traits?: SURefMetaTraits
  /**
   * Description of the system or module
   */
  description: string
  /**
   * Additional notes
   */
  notes?: string
  /**
   * Cost in ability points to activate an ability
   */
  activationCost?: number | 'X'
  /**
   * Range bands for abilities and weapons
   */
  range?: 'Close' | 'Medium' | 'Long' | 'Far' | 'Close/Long'
  damage?: SURefMetaDamage
  table?: SURefMetaTable
  /**
   * Type of action required to use an ability
   */
  actionType?:
    | 'Passive'
    | 'Free'
    | 'Reaction'
    | 'Turn'
    | 'Short'
    | 'Long'
    | 'DownTime'
  /**
   * Actions that can be performed with this system
   */
  actions: SURefMetaAction[]
  /**
   * Bonus to a specific stat
   */
  statBonus?: {
    /**
     * Name of the stat to bonus
     */
    stat: string
    /**
     * Amount of bonus to apply
     */
    bonus: number
  }
  /**
   * Number of this system included
   */
  count?: number
  /**
   * Page number in the source book
   */
  page: number
}
/**
 * Roll table for random outcomes based on d20 rolls
 */
export type SURefMetaTable =
  | {
      /**
       * Critical failure outcome
       */
      '1': string
      /**
       * Critical success outcome
       */
      '20': string
      type: 'standard'
      /**
       * High success outcome
       */
      '11-19': string
      /**
       * Moderate outcome
       */
      '6-10': string
      /**
       * Low outcome
       */
      '2-5': string
    }
  | {
      /**
       * Critical failure outcome
       */
      '1': string
      type: 'alternate'
      /**
       * Critical success outcome
       */
      '19-20': string
      /**
       * High success outcome
       */
      '11-18': string
      /**
       * Moderate outcome
       */
      '6-10': string
      /**
       * Low outcome
       */
      '2-5': string
    }
  | {
      '1': string
      '2': string
      '3': string
      '4': string
      '5': string
      '6': string
      '7': string
      '8': string
      '9': string
      '10': string
      '11': string
      '12': string
      '13': string
      '14': string
      '15': string
      '16': string
      '17': string
      '18': string
      '19': string
      '20': string
      type: 'flat'
    }
/**
 * Basic entry with name, description, source, and page reference
 */
export interface SURefMetaEntry {
  /**
   * Unique identifier for the entry
   */
  id: string
  /**
   * Name of the entry
   */
  name: string
  /**
   * Description of the entry
   */
  description: string
  /**
   * The source book or expansion for this content
   */
  source: 'Salvage Union Workshop Manual'
  /**
   * Page number in the source book
   */
  page: number
  [k: string]: unknown
}

// ============================================
// Main Entity Type Definitions
// ============================================

// Ability
export type SURefAbility = SURefMetaEntry & {
  [k: string]: unknown
}

// AbilityTreeRequirement
/**
 * Requirements for an ability tree
 */
export interface SURefAbilityTreeRequirement {
  /**
   * Unique identifier for the entry
   */
  id: string
  /**
   * Ability tree name
   */
  name:
    | 'Advanced Engineer'
    | 'Advanced Hacking'
    | 'Advanced Hauler'
    | 'Advanced Scout'
    | 'Advanced Soldier'
    | 'Augmentation'
    | 'Cyborg'
    | 'Electronics'
    | 'Fabricator'
    | 'Forging'
    | 'Generic'
    | 'Gladitorial Combat'
    | 'Hacking'
    | 'Leadership'
    | 'Legendary Cyborg'
    | 'Legendary Engineer'
    | 'Legendary Fabricator'
    | 'Legendary Hacker'
    | 'Legendary Hauler'
    | 'Legendary Ranger'
    | 'Legendary Scout'
    | 'Legendary Smuggler'
    | 'Legendary Soldier'
    | 'Legendary Union Rep'
    | 'Mech-Tech'
    | 'Mechanical Knowledge'
    | 'Ranger'
    | 'Recon'
    | 'Salvaging'
    | 'Sleuth'
    | 'Smuggler'
    | 'Sniper'
    | 'Survivalist'
    | 'Tactical Warfare'
    | 'Trading'
    | 'Union Rep'
  /**
   * List of ability tree names required to access this tree
   */
  requirement: (
    | 'Advanced Engineer'
    | 'Advanced Hacking'
    | 'Advanced Hauler'
    | 'Advanced Scout'
    | 'Advanced Soldier'
    | 'Augmentation'
    | 'Cyborg'
    | 'Electronics'
    | 'Fabricator'
    | 'Forging'
    | 'Generic'
    | 'Gladitorial Combat'
    | 'Hacking'
    | 'Leadership'
    | 'Legendary Cyborg'
    | 'Legendary Engineer'
    | 'Legendary Fabricator'
    | 'Legendary Hacker'
    | 'Legendary Hauler'
    | 'Legendary Ranger'
    | 'Legendary Scout'
    | 'Legendary Smuggler'
    | 'Legendary Soldier'
    | 'Legendary Union Rep'
    | 'Mech-Tech'
    | 'Mechanical Knowledge'
    | 'Ranger'
    | 'Recon'
    | 'Salvaging'
    | 'Sleuth'
    | 'Smuggler'
    | 'Sniper'
    | 'Survivalist'
    | 'Tactical Warfare'
    | 'Trading'
    | 'Union Rep'
  )[]
  /**
   * Page number in the source book
   */
  page: number
  /**
   * The source book or expansion for this content
   */
  source: 'Salvage Union Workshop Manual'
}

// BioTitan
export type SURefBioTitan = SURefMetaEntry & {
  [k: string]: unknown
}

// Chassis
export type SURefChassis = SURefMetaEntry & {
  [k: string]: unknown
}

// AdvancedClass
export type SURefAdvancedClass = SURefMetaEntry & {
  [k: string]: unknown
}

// CoreClass
export type SURefCoreClass = SURefMetaEntry & {
  [k: string]: unknown
}

// HybridClass
export type SURefHybridClass = SURefMetaEntry & {
  [k: string]: unknown
}

// CrawlerBay
export type SURefCrawlerBay = SURefMetaEntry & {
  [k: string]: unknown
}

// CrawlerTechLevel
/**
 * A crawler tech level
 */
export interface SURefCrawlerTechLevel {
  /**
   * Unique identifier for the entry
   */
  id: string
  /**
   * Name of the crawler tech level (e.g., 'Hamlet Crawler', 'Village Crawler')
   */
  name: string
  /**
   * Tech level (1-6)
   */
  techLevel: number
  /**
   * Structure points for this tech level
   */
  structurePoints: number
  /**
   * Minimum approximate population
   */
  populationMin: number
  /**
   * Maximum approximate population (0 means unlimited/25,000+)
   */
  populationMax: number
  /**
   * The source book or expansion for this content
   */
  source: 'Salvage Union Workshop Manual'
  /**
   * Page number in the source book
   */
  page: number
}

// Crawler
export type SURefCrawler = SURefMetaEntry & {
  [k: string]: unknown
}

// Creature
export type SURefCreature = SURefMetaEntry & {
  [k: string]: unknown
}

// Drone
export type SURefDrone = SURefMetaEntry & {
  [k: string]: unknown
}

// Equipment
export type SURefEquipment = SURefMetaEntry & {
  [k: string]: unknown
}

// Keyword
/**
 * Basic entry with name, description, source, and page reference
 */
export interface SURefKeyword {
  /**
   * Unique identifier for the entry
   */
  id: string
  /**
   * Name of the entry
   */
  name: string
  /**
   * Description of the entry
   */
  description: string
  /**
   * The source book or expansion for this content
   */
  source: 'Salvage Union Workshop Manual'
  /**
   * Page number in the source book
   */
  page: number
  [k: string]: unknown
}

// Meld
export type SURefMeld = SURefMetaEntry & {
  [k: string]: unknown
}

// Module
/**
 * A system or module that can be installed on a mech
 */
export interface SURefModule {
  /**
   * Unique identifier for the entry
   */
  id: string
  /**
   * Name of the system or module
   */
  name: string
  /**
   * The source book or expansion for this content
   */
  source: 'Salvage Union Workshop Manual'
  /**
   * Technology level required
   */
  techLevel: number
  /**
   * Number of slots required to install
   */
  slotsRequired: number
  /**
   * Salvage value in scrap
   */
  salvageValue: number
  /**
   * Whether this is a recommended starting system
   */
  recommended?: boolean
  traits?: SURefMetaTraits
  /**
   * Description of the system or module
   */
  description: string
  /**
   * Additional notes
   */
  notes?: string
  /**
   * Cost in ability points to activate an ability
   */
  activationCost?: number | 'X'
  /**
   * Range bands for abilities and weapons
   */
  range?: 'Close' | 'Medium' | 'Long' | 'Far' | 'Close/Long'
  damage?: SURefMetaDamage
  /**
   * Roll table for random outcomes based on d20 rolls
   */
  table?:
    | {
        /**
         * Critical failure outcome
         */
        '1': string
        /**
         * Critical success outcome
         */
        '20': string
        type: 'standard'
        /**
         * High success outcome
         */
        '11-19': string
        /**
         * Moderate outcome
         */
        '6-10': string
        /**
         * Low outcome
         */
        '2-5': string
      }
    | {
        /**
         * Critical failure outcome
         */
        '1': string
        type: 'alternate'
        /**
         * Critical success outcome
         */
        '19-20': string
        /**
         * High success outcome
         */
        '11-18': string
        /**
         * Moderate outcome
         */
        '6-10': string
        /**
         * Low outcome
         */
        '2-5': string
      }
    | {
        '1': string
        '2': string
        '3': string
        '4': string
        '5': string
        '6': string
        '7': string
        '8': string
        '9': string
        '10': string
        '11': string
        '12': string
        '13': string
        '14': string
        '15': string
        '16': string
        '17': string
        '18': string
        '19': string
        '20': string
        type: 'flat'
      }
  /**
   * Type of action required to use an ability
   */
  actionType?:
    | 'Passive'
    | 'Free'
    | 'Reaction'
    | 'Turn'
    | 'Short'
    | 'Long'
    | 'DownTime'
  /**
   * Actions that can be performed with this system
   */
  actions: SURefMetaAction[]
  /**
   * Bonus to a specific stat
   */
  statBonus?: {
    /**
     * Name of the stat to bonus
     */
    stat: string
    /**
     * Amount of bonus to apply
     */
    bonus: number
  }
  /**
   * Number of this system included
   */
  count?: number
  /**
   * Page number in the source book
   */
  page: number
}

// Npc
export type SURefNpc = SURefMetaEntry & {
  [k: string]: unknown
}

// RollTable
export type SURefRollTable = SURefMetaEntry & {
  [k: string]: unknown
}

// Squad
export type SURefSquad = SURefMetaEntry & {
  [k: string]: unknown
}

// System
/**
 * A system or module that can be installed on a mech
 */
export interface SURefSystem {
  /**
   * Unique identifier for the entry
   */
  id: string
  /**
   * Name of the system or module
   */
  name: string
  /**
   * The source book or expansion for this content
   */
  source: 'Salvage Union Workshop Manual'
  /**
   * Technology level required
   */
  techLevel: number
  /**
   * Number of slots required to install
   */
  slotsRequired: number
  /**
   * Salvage value in scrap
   */
  salvageValue: number
  /**
   * Whether this is a recommended starting system
   */
  recommended?: boolean
  traits?: SURefMetaTraits
  /**
   * Description of the system or module
   */
  description: string
  /**
   * Additional notes
   */
  notes?: string
  /**
   * Cost in ability points to activate an ability
   */
  activationCost?: number | 'X'
  /**
   * Range bands for abilities and weapons
   */
  range?: 'Close' | 'Medium' | 'Long' | 'Far' | 'Close/Long'
  damage?: SURefMetaDamage
  /**
   * Roll table for random outcomes based on d20 rolls
   */
  table?:
    | {
        /**
         * Critical failure outcome
         */
        '1': string
        /**
         * Critical success outcome
         */
        '20': string
        type: 'standard'
        /**
         * High success outcome
         */
        '11-19': string
        /**
         * Moderate outcome
         */
        '6-10': string
        /**
         * Low outcome
         */
        '2-5': string
      }
    | {
        /**
         * Critical failure outcome
         */
        '1': string
        type: 'alternate'
        /**
         * Critical success outcome
         */
        '19-20': string
        /**
         * High success outcome
         */
        '11-18': string
        /**
         * Moderate outcome
         */
        '6-10': string
        /**
         * Low outcome
         */
        '2-5': string
      }
    | {
        '1': string
        '2': string
        '3': string
        '4': string
        '5': string
        '6': string
        '7': string
        '8': string
        '9': string
        '10': string
        '11': string
        '12': string
        '13': string
        '14': string
        '15': string
        '16': string
        '17': string
        '18': string
        '19': string
        '20': string
        type: 'flat'
      }
  /**
   * Type of action required to use an ability
   */
  actionType?:
    | 'Passive'
    | 'Free'
    | 'Reaction'
    | 'Turn'
    | 'Short'
    | 'Long'
    | 'DownTime'
  /**
   * Actions that can be performed with this system
   */
  actions: SURefMetaAction[]
  /**
   * Bonus to a specific stat
   */
  statBonus?: {
    /**
     * Name of the stat to bonus
     */
    stat: string
    /**
     * Amount of bonus to apply
     */
    bonus: number
  }
  /**
   * Number of this system included
   */
  count?: number
  /**
   * Page number in the source book
   */
  page: number
}

// Trait
/**
 * Basic entry with name, description, source, and page reference
 */
export interface SURefTrait {
  /**
   * Unique identifier for the entry
   */
  id: string
  /**
   * Name of the entry
   */
  name: string
  /**
   * Description of the entry
   */
  description: string
  /**
   * The source book or expansion for this content
   */
  source: 'Salvage Union Workshop Manual'
  /**
   * Page number in the source book
   */
  page: number
  [k: string]: unknown
}

// Vehicle
export type SURefVehicle = SURefMetaEntry & {
  [k: string]: unknown
}

// ============================================
// Helper Union Types
// ============================================

/**
 * Union of all valid schema names (kebab-case file names)
 */
export type SURefSchemaName =
  | 'abilities'
  | 'ability-tree-requirements'
  | 'bio-titans'
  | 'chassis'
  | 'classes.advanced'
  | 'classes.core'
  | 'classes.hybrid'
  | 'crawler-bays'
  | 'crawler-tech-levels'
  | 'crawlers'
  | 'creatures'
  | 'drones'
  | 'equipment'
  | 'keywords'
  | 'meld'
  | 'modules'
  | 'npcs'
  | 'roll-tables'
  | 'squads'
  | 'systems'
  | 'traits'
  | 'vehicles'

/**
 * Union of all file-level schema entity types
 */
export type SURefEntity =
  | SURefAbility
  | SURefAbilityTreeRequirement
  | SURefAdvancedClass
  | SURefBioTitan
  | SURefChassis
  | SURefCoreClass
  | SURefCrawler
  | SURefCrawlerBay
  | SURefCrawlerTechLevel
  | SURefCreature
  | SURefDrone
  | SURefEquipment
  | SURefHybridClass
  | SURefKeyword
  | SURefMeld
  | SURefModule
  | SURefNpc
  | SURefRollTable
  | SURefSquad
  | SURefSystem
  | SURefTrait
  | SURefVehicle

/**
 * Union of all valid meta schema names (includes actions)
 */
export type SURefMetaSchemaName = SURefSchemaName | 'actions'

/**
 * Union of all meta entity types (includes actions)
 */
export type SURefMetaEntity = SURefEntity | SURefMetaAction
