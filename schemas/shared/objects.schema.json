{
  "$schema": "https://json-schema.org/draft/2019-09/schema#",
  "$id": "https://salvageunion.com/schemas/shared/objects.schema.json",
  "title": "Salvage Union Object Definitions",
  "description": "Shared complex object definitions for Salvage Union game data",
  "definitions": {
    "damage": {
      "description": "Damage dealt by an attack or ability",
      "type": "object",
      "additionalProperties": false,
      "required": ["amount"],
      "properties": {
        "damageType": {
          "$ref": "enums.schema.json#/definitions/damageType"
        },
        "type": {
          "$ref": "enums.schema.json#/definitions/damageType"
        },
        "amount": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0,
              "description": "Amount of damage dealt"
            },
            {
              "type": "string",
              "description": "Variable damage formula"
            }
          ]
        }
      },
      "oneOf": [
        {
          "required": ["damageType"]
        },
        {
          "required": ["type"]
        }
      ]
    },
    "traits": {
      "type": "array",
      "description": "Special traits and properties of items, systems, or abilities",
      "items": {
        "type": "object",
        "description": "Trait without a numeric value",
        "additionalProperties": false,
        "required": ["type"],
        "properties": {
          "amount": {
            "type": "integer",
            "minimum": 0,
            "description": "Numeric value for the trait"
          },
          "type": {
            "type": "string",
            "description": "Type of trait that doesn't require a numeric value"
          }
        }
      }
    },
    "stats": {
      "type": "object",
      "description": "Statistics for mechs, chassis, and vehicles",
      "additionalProperties": false,
      "required": [
        "structurePts",
        "energyPts",
        "heatCap",
        "systemSlots",
        "moduleSlots",
        "cargoCap",
        "techLevel",
        "salvageValue"
      ],
      "properties": {
        "structurePts": {
          "type": "integer",
          "minimum": 0,
          "description": "Structure points (durability)"
        },
        "energyPts": {
          "type": "integer",
          "minimum": 0,
          "description": "Energy points (power capacity)"
        },
        "heatCap": {
          "type": "integer",
          "minimum": 0,
          "description": "Heat capacity"
        },
        "systemSlots": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of system slots"
        },
        "moduleSlots": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of module slots"
        },
        "cargoCap": {
          "type": "integer",
          "minimum": 0,
          "description": "Cargo capacity"
        },
        "techLevel": {
          "type": "integer",
          "minimum": 0,
          "description": "Technology level"
        },
        "salvageValue": {
          "type": "integer",
          "minimum": 0,
          "description": "Salvage value in scrap"
        }
      }
    },
    "npc": {
      "type": "object",
      "description": "NPC associated with an entity",
      "additionalProperties": false,
      "required": ["position", "description", "hitPoints"],
      "properties": {
        "position": {
          "type": "string",
          "minLength": 1,
          "description": "Name of the NPC"
        },
        "description": {
          "type": "string",
          "description": "Description of the NPC"
        },
        "hitPoints": {
          "$ref": "common.schema.json#/definitions/hitPoints"
        },
        "choices": {
          "$ref": "#/definitions/choices"
        }
      }
    },
    "patternSystemModule": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Name of the system or module"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of this system or module included"
        },
        "preselectedChoices": {
          "type": "object",
          "description": "Preselected choices for this system or module, keyed by choice ID",
          "additionalProperties": {
            "type": "string",
            "minLength": 1,
            "description": "Name of the choice"
          }
        }
      }
    },
    "choice": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "name"],
      "properties": {
        "id": {
          "$ref": "common.schema.json#/definitions/id"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Name of the choice"
        },
        "description": {
          "type": "string",
          "description": "Description of the choice"
        },
        "rollTable": {
          "type": "string",
          "description": "Roll table name for the choice"
        },
        "schemaEntities": {
          "type": "array",
          "description": "Entities that can be chosen",
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "type": "array",
          "description": "Schema for the choice",
          "items": {
            "$ref": "enums.schema.json#/definitions/schemaName"
          }
        },
        "customSystemOptions": {
          "type": "array",
          "description": "Options for the choice",
          "items": {
            "$ref": "#/definitions/system"
          }
        },
        "constraints": {
          "type": "object",
          "description": "Constraints for the choice",
          "additionalProperties": false,
          "properties": {
            "field": {
              "type": "string",
              "description": "Field to apply the constraint to"
            },
            "min": {
              "type": "integer",
              "minimum": 0,
              "description": "Minimum number of choices"
            },
            "max": {
              "type": "integer",
              "minimum": 0,
              "description": "Maximum number of choices"
            }
          }
        }
      }
    },
    "choices": {
      "type": "array",
      "description": "Choices available to the player when interacting with the NPC",
      "items": {
        "$ref": "#/definitions/choice"
      }
    },
    "action": {
      "type": "object",
      "description": "An action, ability, or attack that can be performed",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Name of the action"
        },
        "description": {
          "type": "string",
          "description": "Description of what the action does"
        },
        "effect": {
          "type": "string",
          "description": "Mechanical effect of the action"
        },
        "notes": {
          "type": "string",
          "description": "Additional notes or flavor text for the action"
        },
        "activationCost": {
          "$ref": "common.schema.json#/definitions/activationCost"
        },
        "activationCurrency": {
          "type": "string",
          "description": "Currency or resource type required for activation"
        },
        "range": {
          "$ref": "enums.schema.json#/definitions/range"
        },
        "actionType": {
          "$ref": "enums.schema.json#/definitions/actionType"
        },
        "traits": {
          "$ref": "#/definitions/traits"
        },
        "damage": {
          "$ref": "#/definitions/damage"
        },
        "options": {
          "type": "array",
          "description": "List of options or choices for this action",
          "items": {
            "type": "object",
            "description": "Structured option with label and value",
            "additionalProperties": false,
            "required": ["value", "label"],
            "properties": {
              "label": {
                "type": "string",
                "description": "Display label for the option (empty string if no label)"
              },
              "value": {
                "type": "string",
                "description": "Description or effect of the option"
              }
            }
          }
        },
        "choices": {
          "$ref": "#/definitions/choices"
        },
        "table": {
          "$ref": "#/definitions/table"
        },
        "actions": {
          "type": "array",
          "description": "Sub-actions or nested actions for this ability",
          "items": {
            "$ref": "#/definitions/action"
          }
        }
      }
    },
    "system": {
      "description": "A system or module that can be installed on a mech",
      "type": "object",
      "required": ["actions", "salvageValue", "slotsRequired", "techLevel"],
      "allOf": [
        {
          "$ref": "#/definitions/entry"
        }
      ],
      "properties": {
        "techLevel": {
          "type": "integer",
          "minimum": 0,
          "description": "Technology level required"
        },
        "slotsRequired": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of slots required to install"
        },
        "salvageValue": {
          "type": "integer",
          "minimum": 0,
          "description": "Salvage value in scrap"
        },
        "recommended": {
          "type": "boolean",
          "description": "Whether this is a recommended starting system"
        },
        "traits": {
          "$ref": "#/definitions/traits"
        },
        "notes": {
          "type": "string",
          "description": "Additional notes"
        },
        "activationCost": {
          "$ref": "common.schema.json#/definitions/activationCost"
        },
        "range": {
          "$ref": "enums.schema.json#/definitions/range"
        },
        "damage": {
          "$ref": "#/definitions/damage"
        },
        "table": {
          "$ref": "#/definitions/table"
        },
        "actionType": {
          "$ref": "enums.schema.json#/definitions/actionType"
        },
        "actions": {
          "type": "array",
          "description": "Actions that can be performed with this system",
          "items": {
            "$ref": "#/definitions/action"
          }
        },
        "statBonus": {
          "type": "object",
          "description": "Bonus to a specific stat",
          "additionalProperties": false,
          "required": ["stat", "bonus"],
          "properties": {
            "stat": {
              "type": "string",
              "description": "Name of the stat to bonus"
            },
            "bonus": {
              "type": "integer",
              "description": "Amount of bonus to apply"
            }
          }
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of this system included"
        }
      }
    },
    "table": {
      "description": "Roll table for random outcomes based on d20 rolls",
      "oneOf": [
        {
          "type": "object",
          "description": "Standard roll table with 5 outcome ranges",
          "additionalProperties": false,
          "required": ["type", "1", "20", "11-19", "6-10", "2-5"],
          "properties": {
            "1": {
              "type": "string",
              "description": "Critical failure outcome"
            },
            "20": {
              "type": "string",
              "description": "Critical success outcome"
            },
            "type": {
              "type": "string",
              "const": "standard"
            },
            "11-19": {
              "type": "string",
              "description": "High success outcome"
            },
            "6-10": {
              "type": "string",
              "description": "Moderate outcome"
            },
            "2-5": {
              "type": "string",
              "description": "Low outcome"
            }
          }
        },
        {
          "type": "object",
          "description": "Alternative standard roll table with different ranges",
          "additionalProperties": false,
          "required": ["type", "1", "19-20", "11-18", "6-10", "2-5"],
          "properties": {
            "1": {
              "type": "string",
              "description": "Critical failure outcome"
            },
            "type": {
              "type": "string",
              "const": "alternate"
            },
            "19-20": {
              "type": "string",
              "description": "Critical success outcome"
            },
            "11-18": {
              "type": "string",
              "description": "High success outcome"
            },
            "6-10": {
              "type": "string",
              "description": "Moderate outcome"
            },
            "2-5": {
              "type": "string",
              "description": "Low outcome"
            }
          }
        },
        {
          "type": "object",
          "description": "Flat roll table with individual outcomes for each numeric result",
          "additionalProperties": false,
          "required": [
            "type",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20"
          ],
          "properties": {
            "1": {
              "type": "string"
            },
            "2": {
              "type": "string"
            },
            "3": {
              "type": "string"
            },
            "4": {
              "type": "string"
            },
            "5": {
              "type": "string"
            },
            "6": {
              "type": "string"
            },
            "7": {
              "type": "string"
            },
            "8": {
              "type": "string"
            },
            "9": {
              "type": "string"
            },
            "10": {
              "type": "string"
            },
            "11": {
              "type": "string"
            },
            "12": {
              "type": "string"
            },
            "13": {
              "type": "string"
            },
            "14": {
              "type": "string"
            },
            "15": {
              "type": "string"
            },
            "16": {
              "type": "string"
            },
            "17": {
              "type": "string"
            },
            "18": {
              "type": "string"
            },
            "19": {
              "type": "string"
            },
            "20": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "const": "flat"
            }
          }
        }
      ]
    },
    "entry": {
      "type": "object",
      "description": "Basic entry with name, description, source, and page reference",
      "required": ["id", "name", "page", "source"],
      "properties": {
        "id": {
          "$ref": "common.schema.json#/definitions/id"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Name of the entry"
        },
        "description": {
          "type": "string",
          "description": "Description of the entry"
        },
        "notes": {
          "type": "string",
          "description": "Additional notes or flavor text for the entry"
        },
        "source": {
          "$ref": "enums.schema.json#/definitions/source"
        },
        "page": {
          "type": "integer",
          "minimum": 1,
          "description": "Page number in the source book"
        }
      }
    }
  }
}
